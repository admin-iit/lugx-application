apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gaming-microservices-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/subnets: subnet-0c5713b0f30c5bbec,subnet-0fe0ca5beeddbe88a
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      # Frontend - serves the React app and handles routing
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
      
      # Gaming Service APIs - products, auth, users
      - path: /api/products
        pathType: Prefix
        backend:
          service:
            name: gaming-service
            port:
              number: 3001
      - path: /api/auth
        pathType: Prefix
        backend:
          service:
            name: gaming-service
            port:
              number: 3001
      - path: /api/users
        pathType: Prefix
        backend:
          service:
            name: gaming-service
            port:
              number: 3001
      
      # Order Service APIs
      - path: /api/orders
        pathType: Prefix
        backend:
          service:
            name: order-service
            port:
              number: 3002
      
      # Analytics Service APIs
      - path: /api/analytics
        pathType: Prefix
        backend:
          service:
            name: analytics-service
            port:
              number: 3003
